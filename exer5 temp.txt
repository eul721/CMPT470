1. XSS Attack: Happens in the "Notes:" input box of New/Edit person. Typing <html><script>alert('xss')</script></html> and submit will immediately call the 
alert on submission. This is potentially dangerous because these unescaped code of HTML will be stored on the server, and may disrupt other users who are browsing
the same content.

2a. Permissions violation: A user can view any user's contact list by visiting URI /security/friends/<target user>/

3. Inappropriately trusted input: Puting characters such as '!@#^@^#%^#' in the first name field while leaving the last name blank will trigger a Django exception. This exception page exposes information that attackers may take interest, such as whether SSL information. The same goes for leaving both name fields blank. Eseentially, no validation was done on these two fields. 

4. CSRF possibility: The csrftoken is exposed in cookie data and was never changed throughout the user session. Potentially, someone can create an endpoint that feeds the token from the victim's cookie and take actions on his behalf. Each individual request should require a different token. 
	1. One of the actions is adding new contact. Potentially, somebody can fake a request on the logged-in user's behalf and populate garbage data into his contact list.
	2. The other is contact sharing. Somebody can fake a request to make the victim share its contacts with the attacker. 

5. Other General Deficiency: Django's Debug mode is on (Discovered through Inappropriately trusted input).